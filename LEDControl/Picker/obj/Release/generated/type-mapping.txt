com/flask/colorpicker/BuildConfig = Com.Flask.Colorpicker.BuildConfig
  <init>()V = .ctor()
  APPLICATION_ID = ApplicationId
  BUILD_TYPE = BuildType
  DEBUG = Debug
  FLAVOR = Flavor
  LIBRARY_PACKAGE_NAME = LibraryPackageName
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
com/flask/colorpicker/builder/ColorPickerClickListener = Com.Flask.Colorpicker.Builder.IColorPickerClickListener
  onClick(Landroid/content/DialogInterface;I[Ljava/lang/Integer;)V = OnClick(Android.Content.IDialogInterface, int, Java.Lang.Integer[])
com/flask/colorpicker/builder/ColorPickerDialogBuilder = Com.Flask.Colorpicker.Builder.ColorPickerDialogBuilder
  alphaSliderOnly()Lcom/flask/colorpicker/builder/ColorPickerDialogBuilder; = AlphaSliderOnly()
  density(I)Lcom/flask/colorpicker/builder/ColorPickerDialogBuilder; = Density(int)
  initialColor(I)Lcom/flask/colorpicker/builder/ColorPickerDialogBuilder; = InitialColor(int)
  initialColors([I)Lcom/flask/colorpicker/builder/ColorPickerDialogBuilder; = InitialColors(int[])
  lightnessSliderOnly()Lcom/flask/colorpicker/builder/ColorPickerDialogBuilder; = LightnessSliderOnly()
  noSliders()Lcom/flask/colorpicker/builder/ColorPickerDialogBuilder; = NoSliders()
  setColorEditTextColor(I)Lcom/flask/colorpicker/builder/ColorPickerDialogBuilder; = SetColorEditTextColor(int)
  setNegativeButton(ILandroid/content/DialogInterface$OnClickListener;)Lcom/flask/colorpicker/builder/ColorPickerDialogBuilder; = SetNegativeButton(int, Android.Content.IDialogInterfaceOnClickListener)
  setNegativeButton(Ljava/lang/CharSequence;Landroid/content/DialogInterface$OnClickListener;)Lcom/flask/colorpicker/builder/ColorPickerDialogBuilder; = SetNegativeButton(Java.Lang.ICharSequence, Android.Content.IDialogInterfaceOnClickListener)
  setOnColorChangedListener(Lcom/flask/colorpicker/OnColorChangedListener;)Lcom/flask/colorpicker/builder/ColorPickerDialogBuilder; = SetOnColorChangedListener(Com.Flask.Colorpicker.IOnColorChangedListener)
  setOnColorSelectedListener(Lcom/flask/colorpicker/OnColorSelectedListener;)Lcom/flask/colorpicker/builder/ColorPickerDialogBuilder; = SetOnColorSelectedListener(Com.Flask.Colorpicker.IOnColorSelectedListener)
  setPickerCount(I)Lcom/flask/colorpicker/builder/ColorPickerDialogBuilder; = SetPickerCount(int)
  setPositiveButton(ILcom/flask/colorpicker/builder/ColorPickerClickListener;)Lcom/flask/colorpicker/builder/ColorPickerDialogBuilder; = SetPositiveButton(int, Com.Flask.Colorpicker.Builder.IColorPickerClickListener)
  setPositiveButton(Ljava/lang/CharSequence;Lcom/flask/colorpicker/builder/ColorPickerClickListener;)Lcom/flask/colorpicker/builder/ColorPickerDialogBuilder; = SetPositiveButton(Java.Lang.ICharSequence, Com.Flask.Colorpicker.Builder.IColorPickerClickListener)
  setTitle(I)Lcom/flask/colorpicker/builder/ColorPickerDialogBuilder; = SetTitle(int)
  setTitle(Ljava/lang/String;)Lcom/flask/colorpicker/builder/ColorPickerDialogBuilder; = SetTitle(string)
  showAlphaSlider(Z)Lcom/flask/colorpicker/builder/ColorPickerDialogBuilder; = ShowAlphaSlider(bool)
  showBorder(Z)Lcom/flask/colorpicker/builder/ColorPickerDialogBuilder; = ShowBorder(bool)
  showColorEdit(Z)Lcom/flask/colorpicker/builder/ColorPickerDialogBuilder; = ShowColorEdit(bool)
  showColorPreview(Z)Lcom/flask/colorpicker/builder/ColorPickerDialogBuilder; = ShowColorPreview(bool)
  showLightnessSlider(Z)Lcom/flask/colorpicker/builder/ColorPickerDialogBuilder; = ShowLightnessSlider(bool)
  wheelType(Lcom/flask/colorpicker/ColorPickerView$WHEEL_TYPE;)Lcom/flask/colorpicker/builder/ColorPickerDialogBuilder; = WheelType(Com.Flask.Colorpicker.ColorPickerView.WHEEL_TYPE)
  with(Landroid/content/Context;)Lcom/flask/colorpicker/builder/ColorPickerDialogBuilder; = With(Android.Content.Context)
  with(Landroid/content/Context;I)Lcom/flask/colorpicker/builder/ColorPickerDialogBuilder; = With(Android.Content.Context, int)
com/flask/colorpicker/builder/ColorWheelRendererBuilder = Com.Flask.Colorpicker.Builder.ColorWheelRendererBuilder
  <init>()V = .ctor()
  getRenderer(Lcom/flask/colorpicker/ColorPickerView$WHEEL_TYPE;)Lcom/flask/colorpicker/renderer/ColorWheelRenderer; = GetRenderer(Com.Flask.Colorpicker.ColorPickerView.WHEEL_TYPE)
com/flask/colorpicker/builder/PaintBuilder = Com.Flask.Colorpicker.Builder.PaintBuilder
  <init>()V = .ctor()
  createAlphaPatternShader(I)Landroid/graphics/Shader; = CreateAlphaPatternShader(int)
  newPaint()Lcom/flask/colorpicker/builder/PaintBuilder$PaintHolder; = NewPaint()
com/flask/colorpicker/ColorCircle = Com.Flask.Colorpicker.ColorCircle
  <init>(FF[F)V = .ctor(float, float, float[])
  getColor()I = Color
  getHsv()[F = GetHsv()
  getHsvWithLightness(F)[F = GetHsvWithLightness(float)
  getX()F = GetX()
  getY()F = GetY()
  set(FF[F)V = Set(float, float, float[])
  sqDist(FF)D = SqDist(float, float)
com/flask/colorpicker/ColorCircleDrawable = Com.Flask.Colorpicker.ColorCircleDrawable
  <init>(I)V = .ctor(int)
com/flask/colorpicker/ColorPickerPreference = Com.Flask.Colorpicker.ColorPickerPreference
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, int)
  alphaSlider = AlphaSlider
  border = Border
  colorIndicator = ColorIndicator
  density = Density
  lightSlider = LightSlider
  selectedColor = SelectedColor
  wheelType = WheelType
  darken(IF)I = Darken(int, float)
  setValue(I)V = SetValue(int)
com/flask/colorpicker/ColorPickerView = Com.Flask.Colorpicker.ColorPickerView
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, int)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;II)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, int, int)
  getSelectedColor()I = SelectedColor
  setSelectedColor(I)V = SelectedColor
  addOnColorChangedListener(Lcom/flask/colorpicker/OnColorChangedListener;)V = AddOnColorChangedListener(Com.Flask.Colorpicker.IOnColorChangedListener)
  addOnColorSelectedListener(Lcom/flask/colorpicker/OnColorSelectedListener;)V = AddOnColorSelectedListener(Com.Flask.Colorpicker.IOnColorSelectedListener)
  callOnColorChangedListeners(II)V = CallOnColorChangedListeners(int, int)
  getAllColors()[Ljava/lang/Integer; = GetAllColors()
  setAlphaSlider(Lcom/flask/colorpicker/slider/AlphaSlider;)V = SetAlphaSlider(Com.Flask.Colorpicker.Slider.AlphaSlider)
  setAlphaValue(F)V = SetAlphaValue(float)
  setColor(IZ)V = SetColor(int, bool)
  setColorEdit(Landroid/widget/EditText;)V = SetColorEdit(Android.Widget.EditText)
  setColorEditTextColor(I)V = SetColorEditTextColor(int)
  setColorPreview(Landroid/widget/LinearLayout;Ljava/lang/Integer;)V = SetColorPreview(Android.Widget.LinearLayout, Java.Lang.Integer)
  setDensity(I)V = SetDensity(int)
  setInitialColor(IZ)V = SetInitialColor(int, bool)
  setInitialColors([Ljava/lang/Integer;I)V = SetInitialColors(Java.Lang.Integer[], int)
  setLightness(F)V = SetLightness(float)
  setLightnessSlider(Lcom/flask/colorpicker/slider/LightnessSlider;)V = SetLightnessSlider(Com.Flask.Colorpicker.Slider.LightnessSlider)
  setRenderer(Lcom/flask/colorpicker/renderer/ColorWheelRenderer;)V = SetRenderer(Com.Flask.Colorpicker.Renderer.IColorWheelRenderer)
  setShowBorder(Z)V = SetShowBorder(bool)
com/flask/colorpicker/OnColorChangedListener = Com.Flask.Colorpicker.IOnColorChangedListener
  onColorChanged(I)V = OnColorChanged(int)
com/flask/colorpicker/OnColorSelectedListener = Com.Flask.Colorpicker.IOnColorSelectedListener
  onColorSelected(I)V = OnColorSelected(int)
com/flask/colorpicker/renderer/AbsColorWheelRenderer = Com.Flask.Colorpicker.Renderer.AbsColorWheelRenderer
  <init>()V = .ctor()
  colorCircleList = ColorCircleList
  colorWheelRenderOption = ColorWheelRenderOption
  getAlphaValueAsInt()I = AlphaValueAsInt
  getColorCircleList()Ljava/util/List; = ColorCircleList
  getRenderOption()Lcom/flask/colorpicker/renderer/ColorWheelRenderOption; = RenderOption
  calcTotalCount(FF)I = CalcTotalCount(float, float)
  initWith(Lcom/flask/colorpicker/renderer/ColorWheelRenderOption;)V = InitWith(Com.Flask.Colorpicker.Renderer.ColorWheelRenderOption)
com/flask/colorpicker/renderer/ColorWheelRenderer = Com.Flask.Colorpicker.Renderer.IColorWheelRenderer
  GAP_PERCENTAGE = GapPercentage
  getColorCircleList()Ljava/util/List; = ColorCircleList
  getRenderOption()Lcom/flask/colorpicker/renderer/ColorWheelRenderOption; = RenderOption
  draw()V = Draw()
  initWith(Lcom/flask/colorpicker/renderer/ColorWheelRenderOption;)V = InitWith(Com.Flask.Colorpicker.Renderer.ColorWheelRenderOption)
com/flask/colorpicker/renderer/ColorWheelRenderOption = Com.Flask.Colorpicker.Renderer.ColorWheelRenderOption
  <init>()V = .ctor()
  alpha = Alpha
  cSize = CSize
  density = Density
  lightness = Lightness
  maxRadius = MaxRadius
  strokeWidth = StrokeWidth
  targetCanvas = TargetCanvas
com/flask/colorpicker/renderer/FlowerColorWheelRenderer = Com.Flask.Colorpicker.Renderer.FlowerColorWheelRenderer
  <init>()V = .ctor()
  draw()V = Draw()
com/flask/colorpicker/renderer/SimpleColorWheelRenderer = Com.Flask.Colorpicker.Renderer.SimpleColorWheelRenderer
  <init>()V = .ctor()
  draw()V = Draw()
com/flask/colorpicker/slider/AbsCustomSlider = Com.Flask.Colorpicker.Slider.AbsCustomSlider
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, int)
  bar = Bar
  barCanvas = BarCanvas
  barHeight = BarHeight
  barOffsetX = BarOffsetX
  bitmap = Bitmap
  bitmapCanvas = BitmapCanvas
  handleRadius = HandleRadius
  onValueChangedListener = OnValueChangedListener
  showBorder = ShowBorder
  value = Value
  createBitmaps()V = CreateBitmaps()
  drawBar(Landroid/graphics/Canvas;)V = DrawBar(Android.Graphics.Canvas)
  drawHandle(Landroid/graphics/Canvas;FF)V = DrawHandle(Android.Graphics.Canvas, float, float)
  getDimension(I)I = GetDimension(int)
  onValueChanged(F)V = OnValueChanged(float)
  setOnValueChangedListener(Lcom/flask/colorpicker/slider/OnValueChangedListener;)V = SetOnValueChangedListener(Com.Flask.Colorpicker.Slider.IOnValueChangedListener)
  setShowBorder(Z)V = SetShowBorder(bool)
  updateBar()V = UpdateBar()
com/flask/colorpicker/slider/AlphaSlider = Com.Flask.Colorpicker.Slider.AlphaSlider
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, int)
  color = Color
  drawBar(Landroid/graphics/Canvas;)V = DrawBar(Android.Graphics.Canvas)
  drawHandle(Landroid/graphics/Canvas;FF)V = DrawHandle(Android.Graphics.Canvas, float, float)
  onValueChanged(F)V = OnValueChanged(float)
  setColor(I)V = SetColor(int)
  setColorPicker(Lcom/flask/colorpicker/ColorPickerView;)V = SetColorPicker(Com.Flask.Colorpicker.ColorPickerView)
com/flask/colorpicker/slider/LightnessSlider = Com.Flask.Colorpicker.Slider.LightnessSlider
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, int)
  drawBar(Landroid/graphics/Canvas;)V = DrawBar(Android.Graphics.Canvas)
  drawHandle(Landroid/graphics/Canvas;FF)V = DrawHandle(Android.Graphics.Canvas, float, float)
  onValueChanged(F)V = OnValueChanged(float)
  setColor(I)V = SetColor(int)
  setColorPicker(Lcom/flask/colorpicker/ColorPickerView;)V = SetColorPicker(Com.Flask.Colorpicker.ColorPickerView)
com/flask/colorpicker/slider/OnValueChangedListener = Com.Flask.Colorpicker.Slider.IOnValueChangedListener
  onValueChanged(F)V = OnValueChanged(float)
com/flask/colorpicker/Utils = Com.Flask.Colorpicker.Utils
  <init>()V = .ctor()
  adjustAlpha(FI)I = AdjustAlpha(float, int)
  alphaValueAsInt(F)I = AlphaValueAsInt(float)
  colorAtLightness(IF)I = ColorAtLightness(int, float)
  getAlphaPercent(I)F = GetAlphaPercent(int)
  getHexString(IZ)Ljava/lang/String; = GetHexString(int, bool)
  lightnessOfColor(I)F = LightnessOfColor(int)
